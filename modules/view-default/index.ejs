<link rel="stylesheet" href="/css/page-transitions.css">
<link rel="stylesheet" href="/css/view-default.css">
<script src="/js/page-transitions.js"></script>

<style type="text/css">


</style>

<div id="wrapper" style="zoom: 0.6;">

	<div id="pages" class="pt-perspective">

		<div class="show round pt-page">

			<!-- FLAG -->
			<div class="flag-3d">
				<img class="flag" src="/flags/4x3/br.svg"/>
			</div>

			<!-- HEADER -->
			<div class="field-top shadow-md">
				<div class="field-title">FIELD</div>
				<div class="field">A</div>
			</div>
			<div class="table-name title-top-xs shadow-md">
				OFICIAL ROUND
			</div>
			<div class="timer title-top-lg shadow-lg">
				15:00
			</div>

			<!-- ROUND and TEAM -->
			<div class="info">
				<div class="round-name shadow-lg">ROUND</div>
				<div class="round-number">2</div>
				<div class="round-team">EMEROTECOS</div>
			</div>

		</div>

		<div class="pt-page bg-blue"  style="text-align: center;">
			<h1 style="position: relative; margin-top: -200px; top: 50%; font-size: 400px; line-height: 400px; color: #F0F0F0;">B</h1>
		</div>

		<div class="pt-page bg-red"  style="text-align: center;">
			<h1 style="position: relative; margin-top: -200px; top: 50%; font-size: 400px; line-height: 400px; color: #F0F0F0;">C</h1>
		</div>
		<!-- <div class="pt-page bg-purple"> <h1>C</h1> </div> -->
		<!-- <div class="pt-page bg-red"> <h1>D</h1> </div> -->
	</div>

	<div id="page-navigation" class="dotstyle dotstyle-scaleup">
		<ul>
			
		</ul>
	</div>

	<footer>
		<span class="logo">
			<img src="/img/logo_robocup.png"/>
		</span>
		
		<h1 class="title">Rescue B</h1>
	</footer>

</div>


<script type="text/javascript">


/*
	Page indicator View
*/
var PageIndicator = Backbone.View.extend({

	page: -1,
	count: 0,

	initialize: function(){

	},

	render: function(){
		// var currentCount  = this.$el.length;
		var targetTotal = this.getCount();

		// Remove extra items
		var safe = 0;
		while(this.$el.children().length > targetTotal){
			console.log('creating element');
			this.removeElement();
			safe++;
			if(safe > 100)
				break;
		}
		// Add new items
		safe = 0;
		while(this.$el.children().length < targetTotal){
			this.addElement();
			safe++;
			if(safe > 100)
				break;
		}

		// Reset current item classes
		var $lis = this.$el.children();
		$lis.removeClass('current');
		$lis.eq(this.getPage()).addClass('current');

		return this;
	},

	// Remove the element "el". If not set, will remove the last one
	removeElement: function(el){
		if(!el)
			el = this.$el.last();
		else
			el = $(el);

		el.fadeOut(el.remove);
	},

	addElement: function(){
		var element = $('<li><a href="#"></a></li>');
		this.$el.append(element);
		return element;
	},

	/*
		Getters and setters for Page and Count
	*/
	getPage: function(){
		if(_.isFunction(this.page))
			return this.page();
		return this.page;
	},
	setPage: function(page){
		this.page = page;
		this.render();
		return this;
	},

	getCount: function(){
		if(_.isFunction(this.count))
			return this.count();
		return this.count;
	},
	setCount: function(count){
		this.count = count;
		this.render();
		return this;
	}
});



var GlobalViewController = Backbone.View.extend({

	pageIndicator: null,

	initialize: function () {
		console.log('Init GlobalViewController');
		var view = this;

		// Instantiate the transition object
		this.pageTransitions = new App.Views.PageTransitions();

		// Instantiate the page indicator and setup it
		this.pageIndicator = new PageIndicator({
			el: '#page-navigation ul'
		});
		this.pageIndicator.setCount(function(){
			// Adapter function to pages indicator
			var size = $('.pt-page').length;
			console.log(size);
			return size;
		});

		var testViews = $('.pt-page');
		var i = -1;
		setInterval(next, 5000);
		next();
		function next(){
			if(i++ >= testViews.length - 1)
				i = 0;

			view.pageIndicator.setPage(i);

			var $view = testViews.eq(i);

			var animationsKeys = _.keys(view.pageTransitions.animations);
			// var key = 'rotateSidesOut';
			var key = _.sample(animationsKeys);
			var animation = view.pageTransitions.animations[key];
			view.pageTransitions.changePage($view, {
				animation: animation
			});
		}
	},
});


$(document).ready(function(){

	// viewController.pageTransitions.changePage($('.pt-page.show'))

	setInterval(function(){
		$('.flag').toggleClass('show');
	}, 3000);
	// pageIndicator.setCount(10);

	var viewController = new GlobalViewController();

	viewController.render();
})


</script>